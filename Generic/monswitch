#!/bin/dash

#
# MonSwitch
#

# Dmenu prompts for monitor switching
# TAGS: POSIX DASH DMENU

# TODO:
# - FIX TRIPLE MONITOR SUPPORT
# - CHECK IF XRANDR IS VALID BEFORE RUNNING DMENU
# - Conf option - check if <?>.dpi $selection exists in xresources and use that instead?
# - see disconnected ports option

# user time
# Prompt "Switch Monitor" con mons, multi, conf, done?

# conf
# display names from conf file
# key is name value is xrandr command string

# MON
# append mon to selmon

# Multi
# FIRST: prompt "(L->R) | Monitor" con mons done
# con mon appends mon to selmon and applies conf, done exits doing nothing
# LOOP: prompt "(L->R) | Monitor" con mons done
# con mon appends mon to selmon and applies conf, done exits doing nothing

all_mons=""
dis_mons=""
con_mons=""

gen_mon_lists ()
{
    userifs="$IFS"		# Save user $IFS
    IFS='
' ; set -f			# globing off
    for line in $(xrandr); do	# TODO make $(xranrr) variable
	case "$line" in
	    *\ con* )
		con_mons="${con_mons}${line%% *} "
		all_mons="${all_mons}${line%% *} " ;;
	    *discon* )
		dis_mons="${dis_mons}${line%% *} "
		all_mons="$all_mons${line%% *} " ;;
	esac
    done
    IFS="$userifs"
    set +f
}

# dmenu prompt and check $selection
dmenu_prompt ()
{
    selection=''
    options=''

    # Separate list by lines for dwm
    for word in $2; do
	options="${options}${word}
"				# this is good
    done
    # prompt with dmenu
    selection=$(echo "$options" $3 | dmenu -i -p "$1")
    expr "${selection# }" : "$3" 1>/dev/null && echo $selection && exit
    # Check if selection is valid
    for word in $con_mons; do
	expr "$selection" : "$word" 1>/dev/null && echo $selection && exit
    done
}

multi_prompt ()
{
    i=1				# keep track of how many mons being set
    dmenu_return=''
    selection=''
    sel_mons=''

    while true; do
	local selection=$(dmenu_prompt "(L->R) | Monitor #$i" "$multi_opts" "done")
	# Gen $multi_opts if necessary
	if [ "$selection" = "done" ] ;then
	    break
	else
	    sel_mons="${sel_mons}${selection} "
	    i=$((i+1))

	    set -- $multi_opts
	    multi_opts=""
	    for word in $@; do
		case "$word" in
		    "$selection") ;;
		    *) multi_opts="${multi_opts}${word}
" ;;				# (:
		esac
	    done
	fi
    done
}

gen_xrandr_string ()
{
    # Remove sel_mons from $all_mons and echo resulting items "--off"
    unsel_string=$(
	for word in $all_mons; do
	    expr " $sel_mons " : '.*'$word'.*' 1>/dev/null ||
		echo "--output $word --off "
	done
		)

    # Echo first $sel_mon "--auto" and loop through rest adding "--right-of"
    prev_mon=''
    sel_string=$(
	set -- $sel_mons	# set items of $sel_mons to array
	echo "--output $1 --auto"
	prev_mon=$1
	shift 1 $@		# remove first array item
	for word in $@; do
	    echo "--output ${word} --auto --right-of ${prev_mon}"
	    prev_mon=$word
	done
	      )
    xrandr_string="${unsel_string}${sel_string}"
}

gen_mon_lists			# this has global scope

main ()
{
    multi_opts="$con_mons"
    local selection=NULL
    selection=$(dmenu_prompt "Switch Monitor" "$con_mons" "multi")

    # Check if dmenu set anything 
    [ -z ${selection} ] || \
    if [ "$selection" = "multi" ]; then
     	multi_prompt
	gen_xrandr_string
	xrandr $xrandr_string
    else
     	sel_mons=$selection
	gen_xrandr_string
	xrandr $xrandr_string
    fi || return 0;
}
main
